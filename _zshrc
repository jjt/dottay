# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="agnoster"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
# .bashrc


export SVN_EDITOR=vim
export resdir=/home/dev/indivision/indivision_core/res
export EDITOR=vim

# History
#export HISTSIZE=10000
#export HISTTIMEFORMAT="%D %T "
#export HISTIGNORE="&:ls:tmux:tma:history:cd:fg:jobs:top:ps"
#export HISTCONTROL=erasedups
#shopt -s histappend
#export PROMPT_COMMAND='history -a'

# User specific aliases and functions
alias mt_py="alias py='/home/dev/movietempest/env-django-1.3.2/bin/python'"
alias mt_source="source /home/dev/movietempest/env-django-1.3.2/bin/activate"
alias mt_django="/home/dev/movietempest/env-django-1.3.2/bin/python /home/dev/movietempest/manage.py runserver"
alias mt_hapywa="py /home/dev/movietempest/hapywa.py /home/dev/movietempest/templates-hamlpy /home/dev/movietempest/templates"
alias se_hapywa="py /home/dev/hapywa.py /home/dev/shopethical/templates- /home/dev/shopethical/templates"
alias so="source"
alias tmux="tmux -2"
alias vim="$HOME/bin/vim73/bin/vim"
alias pbv="pythonbrew venv use"
alias py="python"
alias svn="/opt/svn-1.7.7/bin/svn"

# virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=$HOME/.pythonbrew/pythons/Python-2.7.2/bin/python
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PIP_RESPECT_VIRTUALENV=true
source $HOME/.pythonbrew/etc/bashrc
pythonbrew use 2.7.2

SSH_ENV="$HOME/.ssh/environment"

# start the ssh-agent
function start_agent {
    echo "Initializing new SSH agent..."
    # spawn ssh-agent
    ssh-agent | sed 's/^echo/#echo/' > $SSH_ENV
    echo succeeded
    chmod 600 $SSH_ENV
    . $SSH_ENV > /dev/null
    ssh-add
}

# test for identities
function test_identities {
    # test whether standard identities have been added to the agent already
    ssh-add -l | grep "The agent has no identities" > /dev/null
    if [ $? -eq 0 ]; then
        ssh-add
        # $SSH_AUTH_SOCK broken so we start a new proper agent
        if [ $? -eq 2 ];then
            start_agent
        fi
    fi
}

# check for running ssh-agent with proper $SSH_AGENT_PID
ps -ef | grep $SSH_AGENT_PID | grep ssh-agent > /dev/null
if [ $? -eq 0 ]; then
    test_identities
# if $SSH_AGENT_PID is not properly set, we might be able to load one from
# $SSH_ENV
else
    . $SSH_ENV > /dev/null
    ps -ef | grep $SSH_AGENT_PID | grep ssh-agent > /dev/null
    if [ $? -eq 0 ]; then
        test_identities
    else
        start_agent
    fi
fi

PATH=$PATH:/home/dev/bin:/sbin/:/usr/bin/redis-2.4.1/src:/usr/pgsql-9.1/bin
export PATH

. ~/.nvm/nvm.sh
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function

# Add powerline to the path
PATH=$PATH:/home/dev/.local/bin
export PATH
. /home/dev/.local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
